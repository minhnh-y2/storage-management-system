/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stoman.ui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.stoman.dao.KhoDAO;
import com.stoman.dao.LoaiHangHoaDAO;
import com.stoman.dao.NhanVienDAO;
import com.stoman.dao.ThongKeDAO;
import com.stoman.entity.Kho;
import com.stoman.entity.LoaiHangHoa;
import com.stoman.utils.Auth;
import com.stoman.utils.MsgBox;
import com.stoman.utils.XImages;
import com.stoman.utils.XNumber;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.sql.SQLException;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.chart.title.LegendTitle;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.RectangleEdge;

/**
 *
 * @author Huy
 */
public class StoManJFrame extends javax.swing.JFrame {

    /**
     * Creates new form StoManJFrame
     */
    public StoManJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTrangThai = new javax.swing.JLabel();
        toolBar = new javax.swing.JToolBar() {
            @Override
            protected void paintComponent(Graphics g){
                Graphics2D g2 = (Graphics2D)g.create();

                Color startColor = new Color(141, 220, 250);
                Color endColor = new Color(137, 236, 186);

                g2.setPaint(new GradientPaint(0, 0, startColor, 0, getHeight(), endColor));
                g2.fillRect(0, 0, getWidth(), getHeight());

                g2.dispose();
            }
        };
        btnTaiKhoan = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        separator1 = new javax.swing.JToolBar.Separator();
        btnNhapXuat = new javax.swing.JButton();
        btnKiemKho = new javax.swing.JButton();
        btnDoiTac = new javax.swing.JButton();
        separator2 = new javax.swing.JToolBar.Separator();
        cboThongTin = new javax.swing.JButton();
        tabs = new javax.swing.JTabbedPane();
        pnlTongQuan = new javax.swing.JPanel();
        pnlBieuDo = new javax.swing.JPanel();
        pnlThongTin = new javax.swing.JPanel();
        pnlLuongNhap = new javax.swing.JPanel();
        lblLuongNhap = new javax.swing.JLabel();
        lblSoLuongNhap = new javax.swing.JLabel();
        pnlLuongXuat = new javax.swing.JPanel();
        lblLuongXuat = new javax.swing.JLabel();
        lblSoLuongXuat = new javax.swing.JLabel();
        pnlLuongTonKho = new javax.swing.JPanel();
        lblTonKho = new javax.swing.JLabel();
        lblSoLuongTK = new javax.swing.JLabel();
        separator10 = new javax.swing.JSeparator();
        lblDShangHoa1 = new javax.swing.JLabel();
        lblLocBieuDo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblKhoTQ = new javax.swing.JLabel();
        cboKhoTQ = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        lblNamTQ = new javax.swing.JLabel();
        cboNamTQ = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        lblQuyTQ = new javax.swing.JLabel();
        cboQuyTQ = new javax.swing.JComboBox<>();
        pnlTonKho = new javax.swing.JPanel();
        slpHangTK = new javax.swing.JSplitPane();
        pnlHangTonKho = new javax.swing.JPanel();
        lblTblLuuTru = new javax.swing.JScrollPane();
        tblLuuTru = new javax.swing.JTable();
        separator = new javax.swing.JSeparator();
        pnlTongGiaTri = new javax.swing.JPanel();
        lblTongGiaTri = new javax.swing.JLabel();
        lblSumTongGiaTri = new javax.swing.JLabel();
        pnlTongTonKho = new javax.swing.JPanel();
        lblTonKhoLT = new javax.swing.JLabel();
        lblSoLuongTKLT = new javax.swing.JLabel();
        lblPhanLoaiHH = new javax.swing.JLabel();
        lblKhoLT = new javax.swing.JLabel();
        cboKhoLT = new javax.swing.JComboBox();
        lblDShangHoa = new javax.swing.JLabel();
        lblLoaiHangHoaLT = new javax.swing.JLabel();
        lblTimKiemLT = new javax.swing.JLabel();
        cboLoaiHangHoaLT = new javax.swing.JComboBox();
        txtTimKiemLT = new com.stoman.utils.JTextFieldCustom();
        separator6 = new javax.swing.JSeparator();
        lblTheoLT = new javax.swing.JLabel();
        cboTimKiemLT = new javax.swing.JComboBox<>();
        pnlTop10HangTK = new javax.swing.JPanel();
        lblTopHH = new javax.swing.JLabel();
        oblTopHH = new javax.swing.JScrollPane();
        tblTopHH = new javax.swing.JTable();
        lblTopLHH = new javax.swing.JLabel();
        pnlTopLHH = new javax.swing.JScrollPane();
        tblTopLHH = new javax.swing.JTable();
        separator12 = new javax.swing.JSeparator();
        pnlTKNhap = new javax.swing.JPanel();
        slpTKNhap = new javax.swing.JSplitPane();
        pnlHangNhap = new javax.swing.JPanel();
        separator18 = new javax.swing.JSeparator();
        lblKhoNhap = new javax.swing.JLabel();
        cboKhoNhap = new javax.swing.JComboBox();
        lblLoaiHangHoaNhap = new javax.swing.JLabel();
        cboLoaiHangHoaNhap = new javax.swing.JComboBox();
        separator5 = new javax.swing.JSeparator();
        lblTrongNhap = new javax.swing.JLabel();
        lblThangNhap = new javax.swing.JLabel();
        cboThangNhap = new javax.swing.JComboBox();
        lblNamNhap = new javax.swing.JLabel();
        cboNamNhap = new javax.swing.JComboBox();
        lblPhanLoaiN = new javax.swing.JLabel();
        separator4 = new javax.swing.JSeparator();
        pnlTongLGNhap = new javax.swing.JPanel();
        lblTongGiaTriNhap = new javax.swing.JLabel();
        lblTongSoGTN = new javax.swing.JLabel();
        pnlTongGTNhap = new javax.swing.JPanel();
        lblTongLuongNhap = new javax.swing.JLabel();
        lblTongSoLN = new javax.swing.JLabel();
        lblDShangHoaNhap = new javax.swing.JLabel();
        lblTimKiemNhap = new javax.swing.JLabel();
        txtTimKiemNhap = new com.stoman.utils.JTextFieldCustom();
        lblTheoNhap = new javax.swing.JLabel();
        cboTimKiemNhap = new javax.swing.JComboBox<>();
        lblTblTKnhap = new javax.swing.JScrollPane();
        tblTKnhap = new javax.swing.JTable();
        pnlTop10HangNhap = new javax.swing.JPanel();
        lblTopLHHNhap = new javax.swing.JLabel();
        pnlTopLHHNhap = new javax.swing.JScrollPane();
        tblTopLHHNhap = new javax.swing.JTable();
        separator19 = new javax.swing.JSeparator();
        lblTopHHNhap = new javax.swing.JLabel();
        oblTopHHNhap = new javax.swing.JScrollPane();
        tblTopHHNhap = new javax.swing.JTable();
        pnlTKXuat = new javax.swing.JPanel();
        slpTKXuat = new javax.swing.JSplitPane();
        pnlHangXuat = new javax.swing.JPanel();
        separator25 = new javax.swing.JSeparator();
        lblTrongXuat = new javax.swing.JLabel();
        lblThangXuat = new javax.swing.JLabel();
        cboThangXuat = new javax.swing.JComboBox();
        lblNamXuat = new javax.swing.JLabel();
        cboNamXuat = new javax.swing.JComboBox();
        lblPhanXuat = new javax.swing.JLabel();
        separator26 = new javax.swing.JSeparator();
        pnlTongLGXuat = new javax.swing.JPanel();
        lblTongGiaTriXuat = new javax.swing.JLabel();
        lblTongSoGTX = new javax.swing.JLabel();
        lblDShangHoaXuat = new javax.swing.JLabel();
        lblTimKiemXuat = new javax.swing.JLabel();
        txtTimKiemXuat = new com.stoman.utils.JTextFieldCustom();
        pnlTongGTXuat = new javax.swing.JPanel();
        lblTongLuongXuat = new javax.swing.JLabel();
        lblTongSoLX = new javax.swing.JLabel();
        lblTheoXuat = new javax.swing.JLabel();
        cboTimKiemXuat = new javax.swing.JComboBox<>();
        lblTblTKxuat = new javax.swing.JScrollPane();
        tblTKxuat = new javax.swing.JTable();
        separator24 = new javax.swing.JSeparator();
        lblKhoXuat = new javax.swing.JLabel();
        cboKhoXuat = new javax.swing.JComboBox();
        lblLoaiHangHoaXuat = new javax.swing.JLabel();
        cboLoaiHangHoaXuat = new javax.swing.JComboBox();
        pnlTopHangXuat = new javax.swing.JPanel();
        separator28 = new javax.swing.JSeparator();
        lblTopHHXuat = new javax.swing.JLabel();
        oblTopHHXuat = new javax.swing.JScrollPane();
        tblTopHHXuat = new javax.swing.JTable();
        lblTopLHHXuat = new javax.swing.JLabel();
        pnlTopLHHXuat = new javax.swing.JScrollPane();
        tblTopLHHXuat = new javax.swing.JTable();
        pnlTongHop = new javax.swing.JPanel();
        slpTongHop = new javax.swing.JSplitPane();
        pnlTopGiaTriNhapXuat = new javax.swing.JPanel();
        lblTopLHHTH = new javax.swing.JLabel();
        pnlTopLHHTH = new javax.swing.JScrollPane();
        tblTopLHHTH = new javax.swing.JTable();
        separator33 = new javax.swing.JSeparator();
        lblTopHHTH = new javax.swing.JLabel();
        oblTopHHTH = new javax.swing.JScrollPane();
        tblTopHHTH = new javax.swing.JTable();
        pnlCanCanXuatNhap = new javax.swing.JPanel();
        lblKhoTH = new javax.swing.JLabel();
        lblThangTH = new javax.swing.JLabel();
        pnlTongLGXuatTH = new javax.swing.JPanel();
        lblTongGiaTriXuatTH = new javax.swing.JLabel();
        lblTongSoGTXTH = new javax.swing.JLabel();
        cboThangTH = new javax.swing.JComboBox();
        lblLoaiHangHoaTH = new javax.swing.JLabel();
        cboLoaiHangHoaTH = new javax.swing.JComboBox();
        pnlTongLGNhapTH = new javax.swing.JPanel();
        lblTongGiaTriNhapTH = new javax.swing.JLabel();
        lblTongSoGTNTH = new javax.swing.JLabel();
        lblDSTongHop = new javax.swing.JLabel();
        lblTimKiemTH = new javax.swing.JLabel();
        pnlTongCCGTXuatNhap = new javax.swing.JPanel();
        lblTongGiaTriXN = new javax.swing.JLabel();
        lblTongSoGTXN = new javax.swing.JLabel();
        txtTimKiemTH = new com.stoman.utils.JTextFieldCustom();
        lblTheoTH = new javax.swing.JLabel();
        cboTimKiemTH = new javax.swing.JComboBox<>();
        lblTblTongHop = new javax.swing.JScrollPane();
        tblTongHop = new javax.swing.JTable();
        separator29 = new javax.swing.JSeparator();
        lblPhanTH = new javax.swing.JLabel();
        cboKhoTH = new javax.swing.JComboBox();
        separator30 = new javax.swing.JSeparator();
        lblTrongTH = new javax.swing.JLabel();
        lblNamTH = new javax.swing.JLabel();
        cboNamTH = new javax.swing.JComboBox();
        separator31 = new javax.swing.JSeparator();
        pnlTrangThai = new javax.swing.JPanel();
        lblDongHo = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        mnuHeThong = new javax.swing.JMenu();
        mniTaiKhoan = new javax.swing.JMenuItem();
        mniDoiMK = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mniThoat = new javax.swing.JMenuItem();
        mnuQuanLy = new javax.swing.JMenu();
        mniHangHoa = new javax.swing.JMenuItem();
        mniDoiTac = new javax.swing.JMenuItem();
        mniKho = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        mniPhieuNhapXuat = new javax.swing.JMenuItem();
        mniPhieuKiemKho = new javax.swing.JMenuItem();
        separatorMniNhanVien = new javax.swing.JPopupMenu.Separator();
        mniNhanVien = new javax.swing.JMenuItem();
        mnuTroGiup = new javax.swing.JMenu();
        mniGioiThieu = new javax.swing.JMenuItem();

        lblTrangThai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/team_32px.png"))); // NOI18N
        lblTrangThai.setText("Chưa đăng nhập!");
        lblTrangThai.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STOMAN - STROGE MANAGER SYSTEM");
        setMinimumSize(new java.awt.Dimension(1020, 700));

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        btnTaiKhoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/logout.png"))); // NOI18N
        btnTaiKhoan.setText("Đăng xuất");
        btnTaiKhoan.setFocusable(false);
        btnTaiKhoan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTaiKhoan.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnTaiKhoan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaiKhoanActionPerformed(evt);
            }
        });
        toolBar.add(btnTaiKhoan);

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setFocusable(false);
        btnThoat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThoat.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnThoat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });
        toolBar.add(btnThoat);
        toolBar.add(separator1);

        btnNhapXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/up-down-arrow.png"))); // NOI18N
        btnNhapXuat.setText("Nhập/Xuất");
        btnNhapXuat.setFocusable(false);
        btnNhapXuat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNhapXuat.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnNhapXuat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNhapXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapXuatActionPerformed(evt);
            }
        });
        toolBar.add(btnNhapXuat);

        btnKiemKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/warehouse.png"))); // NOI18N
        btnKiemKho.setText("Kiểm kho");
        btnKiemKho.setFocusable(false);
        btnKiemKho.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKiemKho.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnKiemKho.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKiemKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiemKhoActionPerformed(evt);
            }
        });
        toolBar.add(btnKiemKho);

        btnDoiTac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/handshake.png"))); // NOI18N
        btnDoiTac.setText("Quản lý đối tác");
        btnDoiTac.setFocusable(false);
        btnDoiTac.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDoiTac.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnDoiTac.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDoiTac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiTacActionPerformed(evt);
            }
        });
        toolBar.add(btnDoiTac);
        toolBar.add(separator2);

        cboThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/info.png"))); // NOI18N
        cboThongTin.setText("Thông tin");
        cboThongTin.setFocusable(false);
        cboThongTin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cboThongTin.setMargin(new java.awt.Insets(2, 10, 2, 10));
        cboThongTin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cboThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThongTinActionPerformed(evt);
            }
        });
        toolBar.add(cboThongTin);

        getContentPane().add(toolBar, java.awt.BorderLayout.PAGE_START);

        tabs.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        pnlBieuDo.setLayout(new java.awt.BorderLayout());

        pnlThongTin.setLayout(new java.awt.GridLayout(0, 1));

        pnlLuongNhap.setBackground(new java.awt.Color(255, 102, 102));
        pnlLuongNhap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlLuongNhap.setLayout(new java.awt.GridLayout(0, 1));

        lblLuongNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLuongNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuongNhap.setText("<html><center>Lượng nhập<br>trong năm</center></html>");
        pnlLuongNhap.add(lblLuongNhap);

        lblSoLuongNhap.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSoLuongNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongNhap.setText("0");
        pnlLuongNhap.add(lblSoLuongNhap);

        pnlThongTin.add(pnlLuongNhap);

        pnlLuongXuat.setBackground(new java.awt.Color(0, 153, 204));
        pnlLuongXuat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlLuongXuat.setLayout(new java.awt.GridLayout(0, 1));

        lblLuongXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLuongXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblLuongXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuongXuat.setText("<html><center>Lượng xuất<br>trong năm</center></html>");
        pnlLuongXuat.add(lblLuongXuat);

        lblSoLuongXuat.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSoLuongXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongXuat.setText("0");
        pnlLuongXuat.add(lblSoLuongXuat);

        pnlThongTin.add(pnlLuongXuat);

        pnlLuongTonKho.setBackground(new java.awt.Color(0, 204, 102));
        pnlLuongTonKho.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlLuongTonKho.setLayout(new java.awt.GridLayout(0, 1));

        lblTonKho.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTonKho.setForeground(new java.awt.Color(255, 255, 255));
        lblTonKho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTonKho.setText("Tồn kho hiện tại");
        pnlLuongTonKho.add(lblTonKho);

        lblSoLuongTK.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSoLuongTK.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongTK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongTK.setText("0");
        pnlLuongTonKho.add(lblSoLuongTK);

        pnlThongTin.add(pnlLuongTonKho);

        separator10.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblDShangHoa1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDShangHoa1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDShangHoa1.setText("Biểu đồ nhập xuất");

        lblKhoTQ.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblKhoTQ.setText("KHO");
        jPanel1.add(lblKhoTQ);

        cboKhoTQ.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboKhoTQ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKhoTQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoTQActionPerformed(evt);
            }
        });
        jPanel1.add(cboKhoTQ);

        lblLocBieuDo.add(jPanel1);

        lblNamTQ.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNamTQ.setText("NĂM");
        jPanel3.add(lblNamTQ);

        cboNamTQ.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboNamTQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboNamTQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamTQActionPerformed(evt);
            }
        });
        jPanel3.add(cboNamTQ);

        lblLocBieuDo.add(jPanel3);

        lblQuyTQ.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQuyTQ.setText("QUÝ");
        jPanel4.add(lblQuyTQ);

        cboQuyTQ.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboQuyTQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cả năm", "1", "2", "3", "4" }));
        cboQuyTQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboQuyTQActionPerformed(evt);
            }
        });
        jPanel4.add(cboQuyTQ);

        lblLocBieuDo.add(jPanel4);

        javax.swing.GroupLayout pnlTongQuanLayout = new javax.swing.GroupLayout(pnlTongQuan);
        pnlTongQuan.setLayout(pnlTongQuanLayout);
        pnlTongQuanLayout.setHorizontalGroup(
            pnlTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBieuDo, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                    .addComponent(lblLocBieuDo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDShangHoa1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        pnlTongQuanLayout.setVerticalGroup(
            pnlTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongQuanLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTongQuanLayout.createSequentialGroup()
                        .addComponent(lblDShangHoa1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLocBieuDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlBieuDo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(separator10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10))
        );

        tabs.addTab("Tổng quan", pnlTongQuan);

        slpHangTK.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        tblLuuTru.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLuuTru.setRowHeight(25);
        tblLuuTru.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblLuuTru.getTableHeader().setReorderingAllowed(false);
        lblTblLuuTru.setViewportView(tblLuuTru);

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        pnlTongGiaTri.setBackground(new java.awt.Color(0, 204, 102));
        pnlTongGiaTri.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongGiaTri.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTri.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongGiaTri.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTri.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTri.setText("Tổng Giá Trị");
        pnlTongGiaTri.add(lblTongGiaTri);

        lblSumTongGiaTri.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSumTongGiaTri.setForeground(new java.awt.Color(255, 255, 255));
        lblSumTongGiaTri.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSumTongGiaTri.setText("0");
        pnlTongGiaTri.add(lblSumTongGiaTri);

        pnlTongTonKho.setBackground(new java.awt.Color(0, 204, 102));
        pnlTongTonKho.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongTonKho.setLayout(new java.awt.GridLayout(0, 1));

        lblTonKhoLT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTonKhoLT.setForeground(new java.awt.Color(255, 255, 255));
        lblTonKhoLT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTonKhoLT.setText("Tổng tồn kho");
        pnlTongTonKho.add(lblTonKhoLT);

        lblSoLuongTKLT.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSoLuongTKLT.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongTKLT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongTKLT.setText("0");
        pnlTongTonKho.add(lblSoLuongTKLT);

        lblPhanLoaiHH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPhanLoaiHH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhanLoaiHH.setText("Phân loại danh sách");

        lblKhoLT.setText("Kho");

        cboKhoLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoLTActionPerformed(evt);
            }
        });

        lblDShangHoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDShangHoa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDShangHoa.setText("Danh sách hàng hóa");

        lblLoaiHangHoaLT.setText("Loại Hàng Hóa");

        lblTimKiemLT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/search_24px.png"))); // NOI18N

        cboLoaiHangHoaLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHangHoaLTActionPerformed(evt);
            }
        });

        txtTimKiemLT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemLTKeyReleased(evt);
            }
        });

        lblTheoLT.setText("theo");

        cboTimKiemLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemLTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHangTonKhoLayout = new javax.swing.GroupLayout(pnlHangTonKho);
        pnlHangTonKho.setLayout(pnlHangTonKhoLayout);
        pnlHangTonKhoLayout.setHorizontalGroup(
            pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHangTonKhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlHangTonKhoLayout.createSequentialGroup()
                        .addComponent(lblTimKiemLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTheoLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTimKiemLT, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTblLuuTru, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                    .addComponent(lblDShangHoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTongTonKho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTongGiaTri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHangTonKhoLayout.createSequentialGroup()
                        .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblKhoLT)
                            .addComponent(lblLoaiHangHoaLT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboKhoLT, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboLoaiHangHoaLT, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(separator6)
                    .addComponent(lblPhanLoaiHH, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlHangTonKhoLayout.setVerticalGroup(
            pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHangTonKhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHangTonKhoLayout.createSequentialGroup()
                        .addComponent(lblDShangHoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTimKiemLT)
                            .addComponent(txtTimKiemLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTheoLT)
                            .addComponent(cboTimKiemLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTblLuuTru, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(pnlHangTonKhoLayout.createSequentialGroup()
                        .addComponent(lblPhanLoaiHH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboKhoLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblKhoLT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHangTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLoaiHangHoaLT)
                            .addComponent(cboLoaiHangHoaLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator6, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTongGiaTri, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTongTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        slpHangTK.setTopComponent(pnlHangTonKho);

        lblTopHH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopHH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopHH.setText("10 mặt hàng tồn nhiều nhất");

        tblTopHH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopHH.getTableHeader().setReorderingAllowed(false);
        oblTopHH.setViewportView(tblTopHH);

        lblTopLHH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopLHH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopLHH.setText("10 loại hàng tồn nhiều nhất");

        tblTopLHH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopLHH.getTableHeader().setReorderingAllowed(false);
        pnlTopLHH.setViewportView(tblTopLHH);

        separator12.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout pnlTop10HangTKLayout = new javax.swing.GroupLayout(pnlTop10HangTK);
        pnlTop10HangTK.setLayout(pnlTop10HangTKLayout);
        pnlTop10HangTKLayout.setHorizontalGroup(
            pnlTop10HangTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTop10HangTKLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlTop10HangTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTopLHH, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(lblTopLHH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator12, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTop10HangTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(oblTopHH, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                    .addComponent(lblTopHH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTop10HangTKLayout.setVerticalGroup(
            pnlTop10HangTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTop10HangTKLayout.createSequentialGroup()
                .addGroup(pnlTop10HangTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTop10HangTKLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlTop10HangTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTopLHH)
                            .addComponent(lblTopHH, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlTop10HangTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlTopLHH, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(oblTopHH, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(separator12))
                .addContainerGap())
        );

        slpHangTK.setBottomComponent(pnlTop10HangTK);
        pnlTop10HangTK.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout pnlTonKhoLayout = new javax.swing.GroupLayout(pnlTonKho);
        pnlTonKho.setLayout(pnlTonKhoLayout);
        pnlTonKhoLayout.setHorizontalGroup(
            pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTonKhoLayout.createSequentialGroup()
                .addComponent(slpHangTK)
                .addGap(0, 0, 0))
        );
        pnlTonKhoLayout.setVerticalGroup(
            pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTonKhoLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(slpHangTK))
        );

        tabs.addTab("Hàng tồn kho", pnlTonKho);

        slpTKNhap.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        separator18.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblKhoNhap.setText("Kho");

        cboKhoNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoNhapActionPerformed(evt);
            }
        });

        lblLoaiHangHoaNhap.setText("Loại Hàng Hóa");

        cboLoaiHangHoaNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHangHoaNhapActionPerformed(evt);
            }
        });

        lblTrongNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrongNhap.setText("Trong");

        lblThangNhap.setText("Tháng");

        cboThangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangNhapActionPerformed(evt);
            }
        });

        lblNamNhap.setText("Năm");

        cboNamNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamNhapActionPerformed(evt);
            }
        });

        lblPhanLoaiN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPhanLoaiN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhanLoaiN.setText("Phân loại danh sách");

        pnlTongLGNhap.setBackground(new java.awt.Color(255, 102, 102));
        pnlTongLGNhap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongLGNhap.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTriNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongGiaTriNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTriNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTriNhap.setText("Tổng Giá Trị Nhập");
        pnlTongLGNhap.add(lblTongGiaTriNhap);

        lblTongSoGTN.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongSoGTN.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoGTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoGTN.setText("0");
        pnlTongLGNhap.add(lblTongSoGTN);

        pnlTongGTNhap.setBackground(new java.awt.Color(255, 102, 102));
        pnlTongGTNhap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongGTNhap.setLayout(new java.awt.GridLayout(0, 1));

        lblTongLuongNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongLuongNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblTongLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongLuongNhap.setText("Tổng lượng Nhập");
        pnlTongGTNhap.add(lblTongLuongNhap);

        lblTongSoLN.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongSoLN.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoLN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoLN.setText("0");
        pnlTongGTNhap.add(lblTongSoLN);

        lblDShangHoaNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDShangHoaNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDShangHoaNhap.setText("Danh sách hàng hóa nhập");

        lblTimKiemNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/search_24px.png"))); // NOI18N

        txtTimKiemNhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemNhapKeyReleased(evt);
            }
        });

        lblTheoNhap.setText("theo");

        cboTimKiemNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemNhapActionPerformed(evt);
            }
        });

        tblTKnhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTKnhap.setRowHeight(25);
        tblTKnhap.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblTKnhap.getTableHeader().setReorderingAllowed(false);
        lblTblTKnhap.setViewportView(tblTKnhap);

        javax.swing.GroupLayout pnlHangNhapLayout = new javax.swing.GroupLayout(pnlHangNhap);
        pnlHangNhap.setLayout(pnlHangNhapLayout);
        pnlHangNhapLayout.setHorizontalGroup(
            pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHangNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTblTKnhap, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
                    .addGroup(pnlHangNhapLayout.createSequentialGroup()
                        .addComponent(lblTimKiemNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTheoNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTimKiemNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblDShangHoaNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(separator18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhanLoaiN, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pnlTongGTNhap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTongLGNhap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(separator4, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHangNhapLayout.createSequentialGroup()
                            .addComponent(lblThangNhap)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cboThangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblNamNhap)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cboNamNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(separator5, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlHangNhapLayout.createSequentialGroup()
                            .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblKhoNhap)
                                .addComponent(lblLoaiHangHoaNhap))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cboLoaiHangHoaNhap, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboKhoNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblTrongNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlHangNhapLayout.setVerticalGroup(
            pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHangNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator18)
                    .addGroup(pnlHangNhapLayout.createSequentialGroup()
                        .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhanLoaiN)
                            .addComponent(lblDShangHoaNhap))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHangNhapLayout.createSequentialGroup()
                                .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTimKiemNhap)
                                    .addComponent(txtTimKiemNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTheoNhap)
                                    .addComponent(cboTimKiemNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTblTKnhap, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(pnlHangNhapLayout.createSequentialGroup()
                                .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboKhoNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblKhoNhap))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboLoaiHangHoaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLoaiHangHoaNhap))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separator5, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTrongNhap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlHangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblThangNhap)
                                    .addComponent(cboThangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNamNhap)
                                    .addComponent(cboNamNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTongLGNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTongGTNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        slpTKNhap.setTopComponent(pnlHangNhap);

        lblTopLHHNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopLHHNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopLHHNhap.setText("10 loại hàng nhập nhiều nhất");

        tblTopLHHNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopLHHNhap.getTableHeader().setReorderingAllowed(false);
        pnlTopLHHNhap.setViewportView(tblTopLHHNhap);

        separator19.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblTopHHNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopHHNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopHHNhap.setText("10 mặt hàng nhập nhiều nhất");

        tblTopHHNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopHHNhap.getTableHeader().setReorderingAllowed(false);
        oblTopHHNhap.setViewportView(tblTopHHNhap);

        javax.swing.GroupLayout pnlTop10HangNhapLayout = new javax.swing.GroupLayout(pnlTop10HangNhap);
        pnlTop10HangNhap.setLayout(pnlTop10HangNhapLayout);
        pnlTop10HangNhapLayout.setHorizontalGroup(
            pnlTop10HangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTop10HangNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTop10HangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTopLHHNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblTopLHHNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator19, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTop10HangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTopHHNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oblTopHHNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTop10HangNhapLayout.setVerticalGroup(
            pnlTop10HangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTop10HangNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTop10HangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator19)
                    .addGroup(pnlTop10HangNhapLayout.createSequentialGroup()
                        .addComponent(lblTopLHHNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTopLHHNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addGroup(pnlTop10HangNhapLayout.createSequentialGroup()
                        .addComponent(lblTopHHNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oblTopHHNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        slpTKNhap.setBottomComponent(pnlTop10HangNhap);

        javax.swing.GroupLayout pnlTKNhapLayout = new javax.swing.GroupLayout(pnlTKNhap);
        pnlTKNhap.setLayout(pnlTKNhapLayout);
        pnlTKNhapLayout.setHorizontalGroup(
            pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(slpTKNhap, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlTKNhapLayout.setVerticalGroup(
            pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(slpTKNhap)
        );

        tabs.addTab("Thống kê nhập", pnlTKNhap);

        slpTKXuat.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        lblTrongXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrongXuat.setText("Trong");

        lblThangXuat.setText("Tháng");

        cboThangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangXuatActionPerformed(evt);
            }
        });

        lblNamXuat.setText("Năm");

        cboNamXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamXuatActionPerformed(evt);
            }
        });

        lblPhanXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPhanXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhanXuat.setText("Phân loại danh sách");

        pnlTongLGXuat.setBackground(new java.awt.Color(0, 153, 204));
        pnlTongLGXuat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongLGXuat.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTriXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongGiaTriXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTriXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTriXuat.setText("Tổng Giá Trị Xuất");
        pnlTongLGXuat.add(lblTongGiaTriXuat);

        lblTongSoGTX.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongSoGTX.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoGTX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoGTX.setText("0");
        pnlTongLGXuat.add(lblTongSoGTX);

        lblDShangHoaXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDShangHoaXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDShangHoaXuat.setText("Danh sách hàng hóa xuất");

        lblTimKiemXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/search_24px.png"))); // NOI18N

        txtTimKiemXuat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemXuatKeyReleased(evt);
            }
        });

        pnlTongGTXuat.setBackground(new java.awt.Color(0, 153, 204));
        pnlTongGTXuat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongGTXuat.setLayout(new java.awt.GridLayout(0, 1));

        lblTongLuongXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongLuongXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblTongLuongXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongLuongXuat.setText("Tổng lượng Xuất");
        pnlTongGTXuat.add(lblTongLuongXuat);

        lblTongSoLX.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongSoLX.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoLX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoLX.setText("0");
        pnlTongGTXuat.add(lblTongSoLX);

        lblTheoXuat.setText("theo");

        cboTimKiemXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemXuatActionPerformed(evt);
            }
        });

        tblTKxuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTKxuat.setRowHeight(25);
        tblTKxuat.getTableHeader().setReorderingAllowed(false);
        lblTblTKxuat.setViewportView(tblTKxuat);

        separator24.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblKhoXuat.setText("Kho");

        cboKhoXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoXuatActionPerformed(evt);
            }
        });

        lblLoaiHangHoaXuat.setText("Loại Hàng Hóa");

        cboLoaiHangHoaXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHangHoaXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHangXuatLayout = new javax.swing.GroupLayout(pnlHangXuat);
        pnlHangXuat.setLayout(pnlHangXuatLayout);
        pnlHangXuatLayout.setHorizontalGroup(
            pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHangXuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHangXuatLayout.createSequentialGroup()
                        .addComponent(lblTimKiemXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTheoXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTimKiemXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblDShangHoaXuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTblTKxuat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator24, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPhanXuat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator26, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHangXuatLayout.createSequentialGroup()
                        .addComponent(lblThangXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboThangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNamXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboNamXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separator25, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlHangXuatLayout.createSequentialGroup()
                        .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblKhoXuat)
                            .addComponent(lblLoaiHangHoaXuat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboKhoXuat, 0, 165, Short.MAX_VALUE)
                            .addComponent(cboLoaiHangHoaXuat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblTrongXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTongGTXuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTongLGXuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlHangXuatLayout.setVerticalGroup(
            pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHangXuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator24)
                    .addGroup(pnlHangXuatLayout.createSequentialGroup()
                        .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhanXuat)
                            .addComponent(lblDShangHoaXuat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHangXuatLayout.createSequentialGroup()
                                .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTheoXuat)
                                    .addComponent(lblTimKiemXuat)
                                    .addComponent(txtTimKiemXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboTimKiemXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTblTKxuat, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(pnlHangXuatLayout.createSequentialGroup()
                                .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblKhoXuat)
                                    .addComponent(cboKhoXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblLoaiHangHoaXuat)
                                    .addComponent(cboLoaiHangHoaXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separator25, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTrongXuat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblThangXuat)
                                    .addComponent(lblNamXuat)
                                    .addComponent(cboThangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboNamXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separator26, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTongLGXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTongGTXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        slpTKXuat.setTopComponent(pnlHangXuat);

        separator28.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblTopHHXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopHHXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopHHXuat.setText("10 mặt hàng xuất nhiều nhất");

        tblTopHHXuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopHHXuat.getTableHeader().setReorderingAllowed(false);
        oblTopHHXuat.setViewportView(tblTopHHXuat);

        lblTopLHHXuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopLHHXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopLHHXuat.setText("10 loại hàng xuất nhiều nhất");

        tblTopLHHXuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopLHHXuat.getTableHeader().setReorderingAllowed(false);
        pnlTopLHHXuat.setViewportView(tblTopLHHXuat);

        javax.swing.GroupLayout pnlTopHangXuatLayout = new javax.swing.GroupLayout(pnlTopHangXuat);
        pnlTopHangXuat.setLayout(pnlTopHangXuatLayout);
        pnlTopHangXuatLayout.setHorizontalGroup(
            pnlTopHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopHangXuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTopHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTopLHHXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblTopLHHXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(separator28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTopHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTopHHXuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oblTopHHXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTopHangXuatLayout.setVerticalGroup(
            pnlTopHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopHangXuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTopHangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator28)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopHangXuatLayout.createSequentialGroup()
                        .addComponent(lblTopHHXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oblTopHHXuat, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopHangXuatLayout.createSequentialGroup()
                        .addComponent(lblTopLHHXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTopLHHXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        slpTKXuat.setBottomComponent(pnlTopHangXuat);

        javax.swing.GroupLayout pnlTKXuatLayout = new javax.swing.GroupLayout(pnlTKXuat);
        pnlTKXuat.setLayout(pnlTKXuatLayout);
        pnlTKXuatLayout.setHorizontalGroup(
            pnlTKXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(slpTKXuat, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlTKXuatLayout.setVerticalGroup(
            pnlTKXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(slpTKXuat)
        );

        tabs.addTab("Thống kê xuất", pnlTKXuat);

        slpTongHop.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        lblTopLHHTH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopLHHTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopLHHTH.setText("10 loại hàng giá trị nhập xuất cao");

        tblTopLHHTH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopLHHTH.getTableHeader().setReorderingAllowed(false);
        pnlTopLHHTH.setViewportView(tblTopLHHTH);

        separator33.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblTopHHTH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTopHHTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopHHTH.setText("10 mặt hàng giá trị nhập xuất cao");

        tblTopHHTH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTopHHTH.getTableHeader().setReorderingAllowed(false);
        oblTopHHTH.setViewportView(tblTopHHTH);

        javax.swing.GroupLayout pnlTopGiaTriNhapXuatLayout = new javax.swing.GroupLayout(pnlTopGiaTriNhapXuat);
        pnlTopGiaTriNhapXuat.setLayout(pnlTopGiaTriNhapXuatLayout);
        pnlTopGiaTriNhapXuatLayout.setHorizontalGroup(
            pnlTopGiaTriNhapXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopGiaTriNhapXuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTopGiaTriNhapXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTopLHHTH, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblTopLHHTH, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator33, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTopGiaTriNhapXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTopHHTH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oblTopHHTH, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTopGiaTriNhapXuatLayout.setVerticalGroup(
            pnlTopGiaTriNhapXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopGiaTriNhapXuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTopGiaTriNhapXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator33)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopGiaTriNhapXuatLayout.createSequentialGroup()
                        .addComponent(lblTopHHTH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oblTopHHTH, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopGiaTriNhapXuatLayout.createSequentialGroup()
                        .addComponent(lblTopLHHTH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTopLHHTH, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        slpTongHop.setBottomComponent(pnlTopGiaTriNhapXuat);

        lblKhoTH.setText("Kho");

        lblThangTH.setText("Tháng");

        pnlTongLGXuatTH.setBackground(new java.awt.Color(0, 153, 204));
        pnlTongLGXuatTH.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongLGXuatTH.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTriXuatTH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongGiaTriXuatTH.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTriXuatTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTriXuatTH.setText("Tổng Giá Trị Xuất");
        pnlTongLGXuatTH.add(lblTongGiaTriXuatTH);

        lblTongSoGTXTH.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongSoGTXTH.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoGTXTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoGTXTH.setText("0");
        pnlTongLGXuatTH.add(lblTongSoGTXTH);

        cboThangTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangTHActionPerformed(evt);
            }
        });

        lblLoaiHangHoaTH.setText("Loại Hàng Hóa");

        cboLoaiHangHoaTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHangHoaTHActionPerformed(evt);
            }
        });

        pnlTongLGNhapTH.setBackground(new java.awt.Color(255, 102, 102));
        pnlTongLGNhapTH.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongLGNhapTH.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTriNhapTH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongGiaTriNhapTH.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTriNhapTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTriNhapTH.setText("Tổng Giá Trị Nhập");
        pnlTongLGNhapTH.add(lblTongGiaTriNhapTH);

        lblTongSoGTNTH.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongSoGTNTH.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoGTNTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoGTNTH.setText("0");
        pnlTongLGNhapTH.add(lblTongSoGTNTH);

        lblDSTongHop.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDSTongHop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDSTongHop.setText("Cán cân xuất nhập");

        lblTimKiemTH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/search_24px.png"))); // NOI18N

        pnlTongCCGTXuatNhap.setBackground(new java.awt.Color(255, 153, 51));
        pnlTongCCGTXuatNhap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongCCGTXuatNhap.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTriXN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongGiaTriXN.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTriXN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTriXN.setText("Tổng cán cân xuất nhập");
        pnlTongCCGTXuatNhap.add(lblTongGiaTriXN);

        lblTongSoGTXN.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongSoGTXN.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoGTXN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoGTXN.setText("0");
        pnlTongCCGTXuatNhap.add(lblTongSoGTXN);

        txtTimKiemTH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemTHKeyReleased(evt);
            }
        });

        lblTheoTH.setText("theo");

        cboTimKiemTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemTHActionPerformed(evt);
            }
        });

        tblTongHop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTongHop.setRowHeight(25);
        tblTongHop.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblTongHop.getTableHeader().setReorderingAllowed(false);
        lblTblTongHop.setViewportView(tblTongHop);

        separator29.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblPhanTH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPhanTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhanTH.setText("Phân loại danh sách");

        cboKhoTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoTHActionPerformed(evt);
            }
        });

        lblTrongTH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrongTH.setText("Trong");

        lblNamTH.setText("Năm");

        cboNamTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamTHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCanCanXuatNhapLayout = new javax.swing.GroupLayout(pnlCanCanXuatNhap);
        pnlCanCanXuatNhap.setLayout(pnlCanCanXuatNhapLayout);
        pnlCanCanXuatNhapLayout.setHorizontalGroup(
            pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCanCanXuatNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCanCanXuatNhapLayout.createSequentialGroup()
                        .addComponent(lblTimKiemTH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemTH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTheoTH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTimKiemTH, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTblTongHop, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblDSTongHop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator29, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPhanTH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator31, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(separator30, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTrongTH, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTongLGXuatTH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTongLGNhapTH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTongCCGTXuatNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCanCanXuatNhapLayout.createSequentialGroup()
                        .addComponent(lblThangTH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboThangTH, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNamTH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboNamTH, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCanCanXuatNhapLayout.createSequentialGroup()
                        .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLoaiHangHoaTH)
                            .addComponent(lblKhoTH))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboKhoTH, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboLoaiHangHoaTH, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlCanCanXuatNhapLayout.setVerticalGroup(
            pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCanCanXuatNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator29)
                    .addGroup(pnlCanCanXuatNhapLayout.createSequentialGroup()
                        .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhanTH)
                            .addComponent(lblDSTongHop))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCanCanXuatNhapLayout.createSequentialGroup()
                                .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboKhoTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblKhoTH))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboLoaiHangHoaTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLoaiHangHoaTH))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separator30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTrongTH)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboNamTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNamTH)
                                    .addComponent(lblThangTH)
                                    .addComponent(cboThangTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separator31, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTongLGXuatTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTongLGNhapTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTongCCGTXuatNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlCanCanXuatNhapLayout.createSequentialGroup()
                                .addGroup(pnlCanCanXuatNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTheoTH)
                                    .addComponent(lblTimKiemTH)
                                    .addComponent(txtTimKiemTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboTimKiemTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTblTongHop, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        slpTongHop.setTopComponent(pnlCanCanXuatNhap);

        javax.swing.GroupLayout pnlTongHopLayout = new javax.swing.GroupLayout(pnlTongHop);
        pnlTongHop.setLayout(pnlTongHopLayout);
        pnlTongHopLayout.setHorizontalGroup(
            pnlTongHopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(slpTongHop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1079, Short.MAX_VALUE)
        );
        pnlTongHopLayout.setVerticalGroup(
            pnlTongHopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(slpTongHop, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        tabs.addTab("Tổng hợp", pnlTongHop);

        getContentPane().add(tabs, java.awt.BorderLayout.CENTER);

        pnlTrangThai.setBackground(new java.awt.Color(255, 255, 255));
        pnlTrangThai.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, new java.awt.Color(102, 102, 102)));
        pnlTrangThai.setLayout(new java.awt.BorderLayout());

        lblDongHo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/alarm_clock_32px.png"))); // NOI18N
        lblDongHo.setText("00:00:00 AM");
        lblDongHo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 10));
        pnlTrangThai.add(lblDongHo, java.awt.BorderLayout.EAST);

        getContentPane().add(pnlTrangThai, java.awt.BorderLayout.PAGE_END);

        mnuHeThong.setText("Hệ thống");

        mniTaiKhoan.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniTaiKhoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/logout.png"))); // NOI18N
        mniTaiKhoan.setText("Đăng xuất");
        mniTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniTaiKhoanActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniTaiKhoan);

        mniDoiMK.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDoiMK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/password-reset.png"))); // NOI18N
        mniDoiMK.setText("Đổi mật khẩu");
        mniDoiMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDoiMKActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDoiMK);
        mnuHeThong.add(jSeparator4);

        mniThoat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close.png"))); // NOI18N
        mniThoat.setText("Thoát");
        mniThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThoatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniThoat);

        menuBar.add(mnuHeThong);

        mnuQuanLy.setText("Quản lý");

        mniHangHoa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniHangHoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cardboard-box.png"))); // NOI18N
        mniHangHoa.setText("Hàng hoá");
        mniHangHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHangHoaActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniHangHoa);

        mniDoiTac.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDoiTac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/handshake.png"))); // NOI18N
        mniDoiTac.setText("Đối tác");
        mniDoiTac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDoiTacActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniDoiTac);

        mniKho.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/warehouse.png"))); // NOI18N
        mniKho.setText("Kho");
        mniKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKhoActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniKho);
        mnuQuanLy.add(jSeparator6);

        mniPhieuNhapXuat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniPhieuNhapXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/compare.png"))); // NOI18N
        mniPhieuNhapXuat.setText("Phiếu nhập xuất");
        mniPhieuNhapXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPhieuNhapXuatActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniPhieuNhapXuat);

        mniPhieuKiemKho.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniPhieuKiemKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/attendance.png"))); // NOI18N
        mniPhieuKiemKho.setText("Phiếu kiểm kho");
        mniPhieuKiemKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPhieuKiemKhoActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniPhieuKiemKho);
        mnuQuanLy.add(separatorMniNhanVien);

        mniNhanVien.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/name-tag.png"))); // NOI18N
        mniNhanVien.setText("Nhân viên");
        mniNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNhanVienActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniNhanVien);

        menuBar.add(mnuQuanLy);

        mnuTroGiup.setText("Trợ giúp");

        mniGioiThieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/info.png"))); // NOI18N
        mniGioiThieu.setText("Giới thiệu phần mềm");
        mniGioiThieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniGioiThieuActionPerformed(evt);
            }
        });
        mnuTroGiup.add(mniGioiThieu);

        menuBar.add(mnuTroGiup);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTaiKhoanActionPerformed
        // TODO add your handling code here:
        logout();
        
    }//GEN-LAST:event_mniTaiKhoanActionPerformed

    private void mniDoiMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoiMKActionPerformed
        // TODO add your handling code here:
        openDoiMatKhauDialog();
    }//GEN-LAST:event_mniDoiMKActionPerformed

    private void mniThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThoatActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_mniThoatActionPerformed

    private void mniHangHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHangHoaActionPerformed
        // TODO add your handling code here:
        openHangHoaDialog();
    }//GEN-LAST:event_mniHangHoaActionPerformed

    private void mniDoiTacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoiTacActionPerformed
        // TODO add your handling code here:
        openDoiTacDialog();
    }//GEN-LAST:event_mniDoiTacActionPerformed

    private void mniKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKhoActionPerformed
        // TODO add your handling code here:
        openKhoDialog();
    }//GEN-LAST:event_mniKhoActionPerformed

    private void mniPhieuNhapXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPhieuNhapXuatActionPerformed
        // TODO add your handling code here:
        openNhapXuatKhoDialog();
    }//GEN-LAST:event_mniPhieuNhapXuatActionPerformed

    private void mniPhieuKiemKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPhieuKiemKhoActionPerformed
        // TODO add your handling code here:
        openKiemKhoDialog();
    }//GEN-LAST:event_mniPhieuKiemKhoActionPerformed

    private void mniNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNhanVienActionPerformed
        // TODO add your handling code here:
        openNhanVienDialog();
    }//GEN-LAST:event_mniNhanVienActionPerformed

    private void mniGioiThieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniGioiThieuActionPerformed
        // TODO add your handling code here:
        openGioiThieuDialog();
    }//GEN-LAST:event_mniGioiThieuActionPerformed

    private void cboThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThongTinActionPerformed
        // TODO add your handling code here:
        openGioiThieuDialog();
    }//GEN-LAST:event_cboThongTinActionPerformed

    private void btnDoiTacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiTacActionPerformed
        // TODO add your handling code here:
        openDoiTacDialog();
    }//GEN-LAST:event_btnDoiTacActionPerformed

    private void btnKiemKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKiemKhoActionPerformed
        // TODO add your handling code here:
        openKiemKhoDialog();
    }//GEN-LAST:event_btnKiemKhoActionPerformed

    private void btnNhapXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapXuatActionPerformed
        // TODO add your handling code here:
        openNhapXuatKhoDialog();
    }//GEN-LAST:event_btnNhapXuatActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaiKhoanActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_btnTaiKhoanActionPerformed

    private void cboKhoLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoLTActionPerformed
        // TODO add your handling code here:
        this.fillToTableLuuTru();
        this.fillToTableTop10HHLT();
        this.fillToTableTop10LHHLT();
    }//GEN-LAST:event_cboKhoLTActionPerformed

    private void cboLoaiHangHoaLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHangHoaLTActionPerformed
        // TODO add your handling code here:
        this.fillToTableLuuTru();
        this.fillToTableTop10HHLT();
    }//GEN-LAST:event_cboLoaiHangHoaLTActionPerformed

    private void cboKhoNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoNhapActionPerformed
        // TODO add your handling code here:
        this.fillToTableNhap();
        this.fillToTableTop10HHnhap();
        this.fillToTableTop10LHHnhap();
    }//GEN-LAST:event_cboKhoNhapActionPerformed

    private void cboLoaiHangHoaNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHangHoaNhapActionPerformed
        // TODO add your handling code here:
        this.fillToTableNhap();
        this.fillToTableTop10HHnhap();
    }//GEN-LAST:event_cboLoaiHangHoaNhapActionPerformed

    private void cboNamNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamNhapActionPerformed
        // TODO add your handling code here:
        this.fillToComboBoxThangNhap();
        this.fillToTableNhap();
        this.fillToTableTop10HHnhap();
        this.fillToTableTop10LHHnhap();
    }//GEN-LAST:event_cboNamNhapActionPerformed

    private void cboThangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangNhapActionPerformed
        // TODO add your handling code here:
        this.fillToTableNhap();
        this.fillToTableTop10HHnhap();
        this.fillToTableTop10LHHnhap();
    }//GEN-LAST:event_cboThangNhapActionPerformed

    private void cboKhoXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoXuatActionPerformed
        // TODO add your handling code here:
        this.fillToTableXuat();
        this.fillToTableTop10HHxuat();
        this.fillToTableTop10LHHxuat();

    }//GEN-LAST:event_cboKhoXuatActionPerformed

    private void cboLoaiHangHoaXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHangHoaXuatActionPerformed
        // TODO add your handling code here:
        this.fillToTableXuat();
        this.fillToTableTop10HHxuat();
    }//GEN-LAST:event_cboLoaiHangHoaXuatActionPerformed

    private void cboThangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangXuatActionPerformed
        // TODO add your handling code here:
        this.fillToTableXuat();
        this.fillToTableTop10HHxuat();
        this.fillToTableTop10LHHxuat();
    }//GEN-LAST:event_cboThangXuatActionPerformed

    private void cboNamXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamXuatActionPerformed
        // TODO add your handling code here:
        this.fillToComboBoxThangXuat();
        this.fillToTableXuat();
        this.fillToTableTop10HHxuat();
        this.fillToTableTop10LHHxuat();
    }//GEN-LAST:event_cboNamXuatActionPerformed

    private void cboNamTQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamTQActionPerformed
        this.fillToChartTongQuan();
    }//GEN-LAST:event_cboNamTQActionPerformed

    private void cboKhoTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoTHActionPerformed
        // TODO add your handling code here:
        this.fillToTableTongHop();
        this.fillToTableTop10HHTH();
        this.fillToTableTop10LHHTH();
    }//GEN-LAST:event_cboKhoTHActionPerformed

    private void cboNamTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamTHActionPerformed
        // TODO add your handling code here:
        this.fillToTableTongHop();
        this.fillToTableTop10HHTH();
        this.fillToTableTop10LHHTH();
    }//GEN-LAST:event_cboNamTHActionPerformed

    private void cboTimKiemNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemNhapActionPerformed
        // TODO add your handling code here:
        this.fillToTableNhap();
    }//GEN-LAST:event_cboTimKiemNhapActionPerformed

    private void txtTimKiemNhapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemNhapKeyReleased
        // TODO add your handling code here:
        this.fillToTableNhap();
    }//GEN-LAST:event_txtTimKiemNhapKeyReleased

    private void cboTimKiemTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemTHActionPerformed
        // TODO add your handling code here:
        this.fillToTableTongHop();
    }//GEN-LAST:event_cboTimKiemTHActionPerformed

    private void txtTimKiemTHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemTHKeyReleased
        // TODO add your handling code here:
        this.fillToTableTongHop();
    }//GEN-LAST:event_txtTimKiemTHKeyReleased

    private void txtTimKiemXuatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemXuatKeyReleased
        // TODO add your handling code here:
        this.fillToTableXuat();
    }//GEN-LAST:event_txtTimKiemXuatKeyReleased

    private void cboTimKiemXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemXuatActionPerformed
        // TODO add your handling code here:
        this.fillToTableXuat();
    }//GEN-LAST:event_cboTimKiemXuatActionPerformed

    private void cboTimKiemLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemLTActionPerformed
        // TODO add your handling code here:
        this.fillToTableLuuTru();
    }//GEN-LAST:event_cboTimKiemLTActionPerformed

    private void txtTimKiemLTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemLTKeyReleased
        // TODO add your handling code here:
        this.fillToTableLuuTru();
    }//GEN-LAST:event_txtTimKiemLTKeyReleased

    private void cboKhoTQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoTQActionPerformed
        // TODO add your handling code here:
        this.fillToChartTongQuan();
    }//GEN-LAST:event_cboKhoTQActionPerformed

    private void cboQuyTQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboQuyTQActionPerformed
        // TODO add your handling code here:
        this.fillToChartTongQuan();
    }//GEN-LAST:event_cboQuyTQActionPerformed

    private void cboThangTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangTHActionPerformed
        // TODO add your handling code here:
        this.fillToTableTop10HHTH();
        this.fillToTableTop10LHHTH();
        this.fillToTableTongHop();
    }//GEN-LAST:event_cboThangTHActionPerformed

    private void cboLoaiHangHoaTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHangHoaTHActionPerformed
        // TODO add your handling code here:
        this.fillToTableTop10HHTH();
        this.fillToTableTongHop();
    }//GEN-LAST:event_cboLoaiHangHoaTHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
 /*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         */
        //</editor-fold>
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
            UIManager.put("Table.showHorizontalLines", true);
            UIManager.put("Table.showVerticalLines", false);
            UIManager.put("TitlePane.unifiedBackground", true);
            UIManager.put("Button.arc", 10);
            UIManager.put("Component.arc", 10);
            UIManager.put("ProgressBar.arc", 10);
            UIManager.put("TextComponent.arc", 10);
            UIManager.put("FileChooser.useSystemExtensionHiding", true);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StoManJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoiTac;
    private javax.swing.JButton btnKiemKho;
    private javax.swing.JButton btnNhapXuat;
    private javax.swing.JButton btnTaiKhoan;
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox cboKhoLT;
    private javax.swing.JComboBox cboKhoNhap;
    private javax.swing.JComboBox cboKhoTH;
    private javax.swing.JComboBox cboKhoTQ;
    private javax.swing.JComboBox cboKhoXuat;
    private javax.swing.JComboBox cboLoaiHangHoaLT;
    private javax.swing.JComboBox cboLoaiHangHoaNhap;
    private javax.swing.JComboBox cboLoaiHangHoaTH;
    private javax.swing.JComboBox cboLoaiHangHoaXuat;
    private javax.swing.JComboBox cboNamNhap;
    private javax.swing.JComboBox cboNamTH;
    private javax.swing.JComboBox<String> cboNamTQ;
    private javax.swing.JComboBox cboNamXuat;
    private javax.swing.JComboBox<String> cboQuyTQ;
    private javax.swing.JComboBox cboThangNhap;
    private javax.swing.JComboBox cboThangTH;
    private javax.swing.JComboBox cboThangXuat;
    private javax.swing.JButton cboThongTin;
    private javax.swing.JComboBox<String> cboTimKiemLT;
    private javax.swing.JComboBox<String> cboTimKiemNhap;
    private javax.swing.JComboBox<String> cboTimKiemTH;
    private javax.swing.JComboBox<String> cboTimKiemXuat;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JLabel lblDSTongHop;
    private javax.swing.JLabel lblDShangHoa;
    private javax.swing.JLabel lblDShangHoa1;
    private javax.swing.JLabel lblDShangHoaNhap;
    private javax.swing.JLabel lblDShangHoaXuat;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JLabel lblKhoLT;
    private javax.swing.JLabel lblKhoNhap;
    private javax.swing.JLabel lblKhoTH;
    private javax.swing.JLabel lblKhoTQ;
    private javax.swing.JLabel lblKhoXuat;
    private javax.swing.JLabel lblLoaiHangHoaLT;
    private javax.swing.JLabel lblLoaiHangHoaNhap;
    private javax.swing.JLabel lblLoaiHangHoaTH;
    private javax.swing.JLabel lblLoaiHangHoaXuat;
    private javax.swing.JPanel lblLocBieuDo;
    private javax.swing.JLabel lblLuongNhap;
    private javax.swing.JLabel lblLuongXuat;
    private javax.swing.JLabel lblNamNhap;
    private javax.swing.JLabel lblNamTH;
    private javax.swing.JLabel lblNamTQ;
    private javax.swing.JLabel lblNamXuat;
    private javax.swing.JLabel lblPhanLoaiHH;
    private javax.swing.JLabel lblPhanLoaiN;
    private javax.swing.JLabel lblPhanTH;
    private javax.swing.JLabel lblPhanXuat;
    private javax.swing.JLabel lblQuyTQ;
    private javax.swing.JLabel lblSoLuongNhap;
    private javax.swing.JLabel lblSoLuongTK;
    private javax.swing.JLabel lblSoLuongTKLT;
    private javax.swing.JLabel lblSoLuongXuat;
    private javax.swing.JLabel lblSumTongGiaTri;
    private javax.swing.JScrollPane lblTblLuuTru;
    private javax.swing.JScrollPane lblTblTKnhap;
    private javax.swing.JScrollPane lblTblTKxuat;
    private javax.swing.JScrollPane lblTblTongHop;
    private javax.swing.JLabel lblThangNhap;
    private javax.swing.JLabel lblThangTH;
    private javax.swing.JLabel lblThangXuat;
    private javax.swing.JLabel lblTheoLT;
    private javax.swing.JLabel lblTheoNhap;
    private javax.swing.JLabel lblTheoTH;
    private javax.swing.JLabel lblTheoXuat;
    private javax.swing.JLabel lblTimKiemLT;
    private javax.swing.JLabel lblTimKiemNhap;
    private javax.swing.JLabel lblTimKiemTH;
    private javax.swing.JLabel lblTimKiemXuat;
    private javax.swing.JLabel lblTonKho;
    private javax.swing.JLabel lblTonKhoLT;
    private javax.swing.JLabel lblTongGiaTri;
    private javax.swing.JLabel lblTongGiaTriNhap;
    private javax.swing.JLabel lblTongGiaTriNhapTH;
    private javax.swing.JLabel lblTongGiaTriXN;
    private javax.swing.JLabel lblTongGiaTriXuat;
    private javax.swing.JLabel lblTongGiaTriXuatTH;
    private javax.swing.JLabel lblTongLuongNhap;
    private javax.swing.JLabel lblTongLuongXuat;
    private javax.swing.JLabel lblTongSoGTN;
    private javax.swing.JLabel lblTongSoGTNTH;
    private javax.swing.JLabel lblTongSoGTX;
    private javax.swing.JLabel lblTongSoGTXN;
    private javax.swing.JLabel lblTongSoGTXTH;
    private javax.swing.JLabel lblTongSoLN;
    private javax.swing.JLabel lblTongSoLX;
    private javax.swing.JLabel lblTopHH;
    private javax.swing.JLabel lblTopHHNhap;
    private javax.swing.JLabel lblTopHHTH;
    private javax.swing.JLabel lblTopHHXuat;
    private javax.swing.JLabel lblTopLHH;
    private javax.swing.JLabel lblTopLHHNhap;
    private javax.swing.JLabel lblTopLHHTH;
    private javax.swing.JLabel lblTopLHHXuat;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JLabel lblTrongNhap;
    private javax.swing.JLabel lblTrongTH;
    private javax.swing.JLabel lblTrongXuat;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mniDoiMK;
    private javax.swing.JMenuItem mniDoiTac;
    private javax.swing.JMenuItem mniGioiThieu;
    private javax.swing.JMenuItem mniHangHoa;
    private javax.swing.JMenuItem mniKho;
    private javax.swing.JMenuItem mniNhanVien;
    private javax.swing.JMenuItem mniPhieuKiemKho;
    private javax.swing.JMenuItem mniPhieuNhapXuat;
    private javax.swing.JMenuItem mniTaiKhoan;
    private javax.swing.JMenuItem mniThoat;
    private javax.swing.JMenu mnuHeThong;
    private javax.swing.JMenu mnuQuanLy;
    private javax.swing.JMenu mnuTroGiup;
    private javax.swing.JScrollPane oblTopHH;
    private javax.swing.JScrollPane oblTopHHNhap;
    private javax.swing.JScrollPane oblTopHHTH;
    private javax.swing.JScrollPane oblTopHHXuat;
    private javax.swing.JPanel pnlBieuDo;
    private javax.swing.JPanel pnlCanCanXuatNhap;
    private javax.swing.JPanel pnlHangNhap;
    private javax.swing.JPanel pnlHangTonKho;
    private javax.swing.JPanel pnlHangXuat;
    private javax.swing.JPanel pnlLuongNhap;
    private javax.swing.JPanel pnlLuongTonKho;
    private javax.swing.JPanel pnlLuongXuat;
    private javax.swing.JPanel pnlTKNhap;
    private javax.swing.JPanel pnlTKXuat;
    private javax.swing.JPanel pnlThongTin;
    private javax.swing.JPanel pnlTonKho;
    private javax.swing.JPanel pnlTongCCGTXuatNhap;
    private javax.swing.JPanel pnlTongGTNhap;
    private javax.swing.JPanel pnlTongGTXuat;
    private javax.swing.JPanel pnlTongGiaTri;
    private javax.swing.JPanel pnlTongHop;
    private javax.swing.JPanel pnlTongLGNhap;
    private javax.swing.JPanel pnlTongLGNhapTH;
    private javax.swing.JPanel pnlTongLGXuat;
    private javax.swing.JPanel pnlTongLGXuatTH;
    private javax.swing.JPanel pnlTongQuan;
    private javax.swing.JPanel pnlTongTonKho;
    private javax.swing.JPanel pnlTop10HangNhap;
    private javax.swing.JPanel pnlTop10HangTK;
    private javax.swing.JPanel pnlTopGiaTriNhapXuat;
    private javax.swing.JPanel pnlTopHangXuat;
    private javax.swing.JScrollPane pnlTopLHH;
    private javax.swing.JScrollPane pnlTopLHHNhap;
    private javax.swing.JScrollPane pnlTopLHHTH;
    private javax.swing.JScrollPane pnlTopLHHXuat;
    private javax.swing.JPanel pnlTrangThai;
    private javax.swing.JSeparator separator;
    private javax.swing.JToolBar.Separator separator1;
    private javax.swing.JSeparator separator10;
    private javax.swing.JSeparator separator12;
    private javax.swing.JSeparator separator18;
    private javax.swing.JSeparator separator19;
    private javax.swing.JToolBar.Separator separator2;
    private javax.swing.JSeparator separator24;
    private javax.swing.JSeparator separator25;
    private javax.swing.JSeparator separator26;
    private javax.swing.JSeparator separator28;
    private javax.swing.JSeparator separator29;
    private javax.swing.JSeparator separator30;
    private javax.swing.JSeparator separator31;
    private javax.swing.JSeparator separator33;
    private javax.swing.JSeparator separator4;
    private javax.swing.JSeparator separator5;
    private javax.swing.JSeparator separator6;
    private javax.swing.JPopupMenu.Separator separatorMniNhanVien;
    private javax.swing.JSplitPane slpHangTK;
    private javax.swing.JSplitPane slpTKNhap;
    private javax.swing.JSplitPane slpTKXuat;
    private javax.swing.JSplitPane slpTongHop;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblLuuTru;
    private javax.swing.JTable tblTKnhap;
    private javax.swing.JTable tblTKxuat;
    private javax.swing.JTable tblTongHop;
    private javax.swing.JTable tblTopHH;
    private javax.swing.JTable tblTopHHNhap;
    private javax.swing.JTable tblTopHHTH;
    private javax.swing.JTable tblTopHHXuat;
    private javax.swing.JTable tblTopLHH;
    private javax.swing.JTable tblTopLHHNhap;
    private javax.swing.JTable tblTopLHHTH;
    private javax.swing.JTable tblTopLHHXuat;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JTextField txtTimKiemLT;
    private javax.swing.JTextField txtTimKiemNhap;
    private javax.swing.JTextField txtTimKiemTH;
    private javax.swing.JTextField txtTimKiemXuat;
    // End of variables declaration//GEN-END:variables

    private KhoDAO kDAO = new KhoDAO();
    private ThongKeDAO tkDAO = new ThongKeDAO();
    private LoaiHangHoaDAO lhhDAO = new LoaiHangHoaDAO();

    private DefaultTableModel tblLuuTruModel;
    private DefaultTableModel tblNhapModel;
    private DefaultTableModel tblXuatModel;
    private DefaultTableModel tblTongHopModel;

    private DefaultTableModel tblTopLHHModel;
    private DefaultTableModel tblTopHHModel;
    private DefaultTableModel tblTopLHHNhapModel;
    private DefaultTableModel tblTopHHNhapModel;
    private DefaultTableModel tblTopLHHXuatModel;
    private DefaultTableModel tblTopHHXuatModel;
    private DefaultTableModel tblTopLHHTHModel;
    private DefaultTableModel tblTopHHTHModel;

    private final String numFormat = "#,##0.0";

    private void init() {
        this.setIconImage(XImages.getAppIcon());
        this.setLocationRelativeTo(null);

        new ChaoJDialog(this, true).setVisible(true);
        new DangNhapJDialog(this, true).setVisible(true);
        
        this.clock();
        this.formatTable();
        this.loginStatus();

        this.refreshForm();

        timer.start();

    }

    // Tạo tiêu đề và định dạng bảng
    private void formatTable() {
        String headerLT[] = {"STT", "HÀNG HÓA", "SỐ LƯỢNG TỒN"};
        tblLuuTruModel = new DefaultTableModel(headerLT, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
            
            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblLuuTru.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblLuuTru.setModel(tblLuuTruModel);

        String headerNhap[] = {"STT", "HÀNG HÓA", "SỐ LƯỢNG NHẬP", "NHẬP TB", "GIÁ NHẬP TB", "TỔNG GIÁ TRỊ"};
        tblNhapModel = new DefaultTableModel(headerNhap, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblNhapModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTKnhap.setModel(tblNhapModel);

        String headerXuat[] = {"STT", "HÀNG HÓA", "SỐ LƯỢNG XUẤT", "XUẤT TB", "GIÁ XUẤT TB", "TỔNG GIÁ TRỊ"};
        tblXuatModel = new DefaultTableModel(headerXuat, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblXuatModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTKxuat.setModel(tblXuatModel);

        String headerTH[] = {"STT", "TÊN HÀNG HÓA", "TỔNG GIÁ TRỊ XUẤT NHẬP", "LỢI NHUẬN TB"};
        tblTongHopModel = new DefaultTableModel(headerTH, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTongHopModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTongHop.setModel(tblTongHopModel);

        String headerTopLHH[] = {"STT", "LOẠI HÀNG HÓA", "SỐ LƯỢNG TỒN"};
        tblTopLHHModel = new DefaultTableModel(headerTopLHH, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopLHHModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopLHH.setModel(tblTopLHHModel);

        String headerTopHH[] = {"STT", "TÊN HÀNG HÓA", "SỐ LƯỢNG TỒN"};
        tblTopHHModel = new DefaultTableModel(headerTopHH, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopHHModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopHH.setModel(tblTopHHModel);

        String headerTopLHHNhap[] = {"STT", "LOẠI HÀNG HÓA", "SỐ LƯỢNG NHẬP"};
        tblTopLHHNhapModel = new DefaultTableModel(headerTopLHHNhap, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopLHHNhapModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopLHHNhap.setModel(tblTopLHHNhapModel);

        String headerTopHHNhap[] = {"STT", "TÊN HÀNG HÓA", "SỐ LƯỢNG NHẬP"};
        tblTopHHNhapModel = new DefaultTableModel(headerTopHHNhap, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopHHNhapModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopHHNhap.setModel(tblTopHHNhapModel);

        String headerTopLHHXuat[] = {"STT", "LOẠI HÀNG HÓA", "SỐ LƯỢNG XUẤT"};
        tblTopLHHXuatModel = new DefaultTableModel(headerTopLHHXuat, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopLHHXuatModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopLHHXuat.setModel(tblTopLHHXuatModel);

        String headerTopHHXuat[] = {"STT", "TÊN HÀNG HÓA", "SỐ LƯỢNG XUẤT"};
        tblTopHHXuatModel = new DefaultTableModel(headerTopHHXuat, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopHHXuatModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopHHXuat.setModel(tblTopHHXuatModel);

        String headerTopLHHTH[] = {"STT", "LOẠI HÀNG HÓA", "TỔNG GIÁ TRỊ XUẤT NHẬP", "LỢI NHUẬN TB"};
        tblTopLHHTHModel = new DefaultTableModel(headerTopLHHTH, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopLHHTHModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopLHHTH.setModel(tblTopLHHTHModel);

        String headerTopHHTH[] = {"STT", "TÊN HÀNG HÓA", "TỔNG GIÁ TRỊ XUẤT NHẬP", "LỢI NHUẬN TB"};
        tblTopHHTHModel = new DefaultTableModel(headerTopHHTH, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblTopHHTHModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTopHHTH.setModel(tblTopHHTHModel);

        // Điều chỉnh size column        
        // Chỉnh size cột các bảng
        tblLuuTru.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblLuuTru.getColumnModel().getColumn(1).setPreferredWidth(700);
        tblLuuTru.getColumnModel().getColumn(2).setPreferredWidth(100);

        tblTopLHH.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopLHH.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblTopLHH.getColumnModel().getColumn(2).setPreferredWidth(200);

        tblTopHH.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopHH.getColumnModel().getColumn(1).setPreferredWidth(600);
        tblTopHH.getColumnModel().getColumn(2).setPreferredWidth(200);

        tblTKnhap.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTKnhap.getColumnModel().getColumn(1).setPreferredWidth(330);
        tblTKnhap.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblTKnhap.getColumnModel().getColumn(3).setPreferredWidth(50);
        tblTKnhap.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblTKnhap.getColumnModel().getColumn(5).setPreferredWidth(100);

        tblTopLHHNhap.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopLHHNhap.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblTopLHHNhap.getColumnModel().getColumn(2).setPreferredWidth(200);

        tblTopHHNhap.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopHHNhap.getColumnModel().getColumn(1).setPreferredWidth(600);
        tblTopHHNhap.getColumnModel().getColumn(2).setPreferredWidth(200);

        tblTKxuat.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTKxuat.getColumnModel().getColumn(1).setPreferredWidth(330);
        tblTKxuat.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblTKxuat.getColumnModel().getColumn(3).setPreferredWidth(50);
        tblTKxuat.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblTKxuat.getColumnModel().getColumn(5).setPreferredWidth(100);

        tblTopLHHXuat.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopLHHXuat.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblTopLHHXuat.getColumnModel().getColumn(2).setPreferredWidth(200);

        tblTopHHXuat.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopHHXuat.getColumnModel().getColumn(1).setPreferredWidth(600);
        tblTopHHXuat.getColumnModel().getColumn(2).setPreferredWidth(200);

        tblTongHop.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTongHop.getColumnModel().getColumn(1).setPreferredWidth(600);
        tblTongHop.getColumnModel().getColumn(2).setPreferredWidth(200);
        tblTongHop.getColumnModel().getColumn(3).setPreferredWidth(200);

        tblTopLHHTH.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopLHHTH.getColumnModel().getColumn(1).setPreferredWidth(150);
        tblTopLHHTH.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblTopLHHTH.getColumnModel().getColumn(3).setPreferredWidth(100);

        tblTopHHTH.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblTopHHTH.getColumnModel().getColumn(1).setPreferredWidth(400);
        tblTopHHTH.getColumnModel().getColumn(2).setPreferredWidth(150);
        tblTopHHTH.getColumnModel().getColumn(3).setPreferredWidth(150);

        // thể hiện các cột    
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        tblLuuTru.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopLHH.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopHH.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTKnhap.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopLHHNhap.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopHHNhap.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTKxuat.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopLHHXuat.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopHHXuat.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTongHop.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopLHHTH.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblTopHHTH.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);

    }

    // Tự động điều chỉnh nút đăng nhập/đăng xuất
    private void loginStatus() {
        if (!Auth.isLogin()) {
            mniTaiKhoan.setText("Đăng nhập");
            mniTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/login.png")));
            btnTaiKhoan.setText("Đăng nhập");
            btnTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/login.png")));
            lblTrangThai.setText("Chưa đăng nhập vào hệ thống!");

            mnuQuanLy.setVisible(false);
            mniDoiMK.setVisible(false);
            tabs.setVisible(false);

            hideComponents(false);
        } else {
            mniTaiKhoan.setText("Đăng xuất");
            mniTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/logout.png")));
            btnTaiKhoan.setText("Đăng xuất");
            btnTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/logout.png")));
            String vaiTro = Auth.user.isVaiTro() ? "Trưởng kho" : "Thủ kho";
            lblTrangThai.setText(Auth.user.getTenNV() + " | " + vaiTro);

            mnuQuanLy.setVisible(true);
            mniDoiMK.setVisible(true);
            tabs.setVisible(true);

            hideComponents(Auth.user.isVaiTro());
        }

    }

    // Giấu các bộ phận form
    private void hideComponents(boolean init) {
        separatorMniNhanVien.setVisible(init);
        mniNhanVien.setVisible(init);
        pnlTongHop.setVisible(init);
        if (init) {
            tabs.addTab("Tổng hợp", this.pnlTongHop);
        } else {
            tabs.remove(this.pnlTongHop);
        }
    }

    // Đồng hồ
    private void clock() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm:ss a");
        lblDongHo.setText(LocalTime.now().format(formatter));
        new Timer(1000, (e) -> {
            lblDongHo.setText(LocalTime.now().format(formatter));
        }).start();

    }

    // Đỗ dữ liệu cho biểu đồ
    private void fillToChartTongQuan() {
        try {
            pnlBieuDo.removeAll();
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();

            Double tongNhap = 0.0;
            Double tongXuat = 0.0;
            Double tongTonKho = (Double) ((Object[]) tkDAO.getListTongLuongSP().get(0))[0];
            if(cboNamTQ.getItemCount() == 0) return;
            int nam = (Integer) cboNamTQ.getSelectedItem();

            String maKho;
            int indexKho = cboKhoTQ.getSelectedIndex();

            if (indexKho > 0) {
                maKho = ((Kho) cboKhoTQ.getSelectedItem()).toString();
            } else {
                maKho = "";
            }

            int quy = (Integer) cboQuyTQ.getSelectedIndex();

            // Đổ dữ liệu vào biểu đồ
            try {
                List<Object[]> list = tkDAO.getListTongQuan(nam, maKho);

                int i = 0;

                addValue:
                for (Object[] values : list) {
                    check:
                    switch (quy) {
                        case 1:
                            if ((Integer) values[0] > 3) {
                                continue addValue;
                            }
                            break;
                        case 2:
                            if ((Integer) values[0] < 4 || (Integer) values[0] > 6) {
                                continue addValue;
                            }
                            break;
                        case 3:
                            if ((Integer) values[0] < 7 || (Integer) values[0] > 9) {
                                continue addValue;
                            }
                            break;
                        case 4:
                            if ((Integer) values[0] < 10 || (Integer) values[0] > 12) {
                                continue addValue;
                            }
                            break;
                        default:
                    }

                    dataset.setValue((Double) values[2], "Lượng nhập", "T " + values[0]);
                    dataset.setValue((Double) values[1], "Lượng xuất", "T " + values[0]);

                    tongNhap += (Double) values[2];
                    tongXuat += (Double) values[1];
                    i++;
                }
                // Tạo biểu đồ Bar Chart
                JFreeChart barChart = ChartFactory.createBarChart(null,
                        "Tháng", "Số lượng", dataset, PlotOrientation.VERTICAL, true, true, false);
                CategoryPlot plot = barChart.getCategoryPlot();
                plot.setRangeGridlinePaint(Color.black);

                //khoảng chống giữa các thanh
                SubCategoryAxis domainAxis = new SubCategoryAxis(" ");
                domainAxis.setCategoryMargin(0.40);
                plot.setDomainAxis(domainAxis);

                ChartPanel chtBieuDo = new ChartPanel(barChart);

                Color trans = new Color(0xFF, 0xFF, 0xFF, 0);
                barChart.setBackgroundPaint(trans);

                plot.setOutlinePaint(trans);
                plot.setBackgroundPaint(trans);

                LegendTitle legend = barChart.getLegend();
                legend.setPosition(RectangleEdge.TOP);
                legend.setBackgroundPaint(trans);
                legend.setFrame(BlockBorder.NONE);
                legend.setItemFont(new Font("Arial", 0, 15));

                ((BarRenderer) plot.getRenderer()).setBarPainter(new StandardBarPainter());

                // Chỉnh màu cột
                ((CategoryPlot) chtBieuDo.getChart().getPlot()).getRenderer().setSeriesPaint(0, new Color(255, 102, 102));
                ((CategoryPlot) chtBieuDo.getChart().getPlot()).getRenderer().setSeriesPaint(1, new Color(0, 153, 204));

                if (i > 0) {
                    pnlBieuDo.add(chtBieuDo);
                }
                pnlBieuDo.updateUI();
                lblSoLuongNhap.setText(XNumber.toString(tongNhap, numFormat));
                lblSoLuongXuat.setText(XNumber.toString(tongXuat, numFormat));
                lblSoLuongTK.setText(XNumber.toString(tongTonKho, numFormat));

            } catch (Exception e) {
                e.printStackTrace();
            }

        } catch (SQLException ex) {
            Logger.getLogger(StoManJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Đăng xuất
    private void logout() {
        Auth.clear();
        new DangNhapJDialog(this, true).setVisible(true);
        this.loginStatus();
    }

    // Thoát chương trình
    private void exit() {
        if (MsgBox.confirm(this, "Bạn có muốn kết thúc chương trình?")) {
            System.exit(0);
        }
    }

    // Mở form đổi mật khẩu
    private void openDoiMatKhauDialog() {
        new DoiMatKhauJDialog(this, true).setVisible(true);
    }

    // Mở form quản lý đối tác
    private void openDoiTacDialog() {
        if(!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập!");
            return;
        }
        this.timer.stop();
        new DoiTacJDialog(this, true).setVisible(true);
        this.refreshForm();
    }

    // Mở form giới thiệu phần mềm
    private void openGioiThieuDialog() {
        this.timer.stop();
        new GioiThieuJDialog(this, true).setVisible(true);
        this.refreshForm();
    }

    // Mở form quản lý hàng hoá
    private void openHangHoaDialog() {
        if(!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập!");
            return;
        }
        this.timer.stop();
        new HangHoaJDialog(this, true).setVisible(true);
        this.refreshForm();
    }

    // Mở form quản lý kho
    private void openKhoDialog() {
        if(!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập!");
            return;
        }
        this.timer.stop();
        new KhoJDialog(this, true).setVisible(true);
        this.refreshForm();
    }

    // Mở form quản lý nhân viên
    private void openNhanVienDialog() {
        if(!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập!");
            return;
        }
        this.timer.stop();
        new NhanVienJDialog(this, true).setVisible(true);
        this.refreshForm();
    }

    // Mở form quản lý phiếu kiểm kho
    private void openKiemKhoDialog() {
        if(!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập!");
            return;
        }
        this.timer.stop();
        new PhieuKiemKhoJDialog(this, true).setVisible(true);
        this.refreshForm();
    }

    // Mở form quản lý phiếu nhập xuất kho
    private void openNhapXuatKhoDialog() {
        if(!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập!");
            return;
        }
        this.timer.stop();
        new PhieuNhapXuatKhoJDialog(this, true).setVisible(true);
        this.refreshForm();
    }

    // Đổ dữ liệu vào ComboBox kho
    private void fillToComboBoxKho() {
        DefaultComboBoxModel model1 = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        DefaultComboBoxModel model3 = new DefaultComboBoxModel();
        DefaultComboBoxModel model4 = new DefaultComboBoxModel();
        DefaultComboBoxModel model5 = new DefaultComboBoxModel();

        model1.removeAllElements();
        model2.removeAllElements();
        model3.removeAllElements();
        model4.removeAllElements();
        model5.removeAllElements();

        try {
            List<Kho> list = kDAO.selectAll();
            model1.addElement(new String("Tất cả"));
            model2.addElement(new String("Tất cả"));
            model3.addElement(new String("Tất cả"));
            model4.addElement(new String("Tất cả"));
            model5.addElement(new String("Tất cả"));

            for (Kho k : list) {
                model1.addElement(k);
                model2.addElement(k);
                model3.addElement(k);
                model4.addElement(k);
                model5.addElement(k);
            }

            cboKhoLT.setModel(model1);
            cboKhoNhap.setModel(model2);
            cboKhoXuat.setModel(model3);
            cboKhoTH.setModel(model4);
            cboKhoTQ.setModel(model5);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu vào ComboBox kho
    private void fillToComboBoxLoaiHangHoa() {
        DefaultComboBoxModel model1 = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        DefaultComboBoxModel model3 = new DefaultComboBoxModel();
        DefaultComboBoxModel model4 = new DefaultComboBoxModel();
        DefaultComboBoxModel model5 = new DefaultComboBoxModel();

        model1.removeAllElements();
        model2.removeAllElements();
        model3.removeAllElements();
        model4.removeAllElements();
        model5.removeAllElements();

        try {
            List<LoaiHangHoa> list = lhhDAO.selectAll();
            model1.addElement(new String("Tất cả"));
            model2.addElement(new String("Tất cả"));
            model3.addElement(new String("Tất cả"));
            model4.addElement(new String("Tất cả"));

            for (LoaiHangHoa lhh : list) {
                model1.addElement(lhh);
                model2.addElement(lhh);
                model3.addElement(lhh);
                model4.addElement(lhh);
            }

            cboLoaiHangHoaLT.setModel(model1);
            cboLoaiHangHoaNhap.setModel(model2);
            cboLoaiHangHoaXuat.setModel(model3);
            cboLoaiHangHoaTH.setModel(model4);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu vào ComboBox năm tháng    
    private void fillToComboBoxNamNhap() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        model.removeAllElements();

        try {
            List<Object[]> list = tkDAO.getListNamNhap();

            for (Object[] nam : list) {
                model.addElement((Integer) nam[0]);

            }
            cboNamNhap.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToComboBoxThangNhap() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        if(cboNamNhap.getItemCount() == 0) return;
        int nam = (Integer) cboNamNhap.getSelectedItem();
        try {
            List<Object[]> list = tkDAO.getListThangNhap(nam);
            model.addElement(new String("Cả năm"));

            for (Object[] thang : list) {
                model.addElement((Integer) thang[0]);
            }
            cboThangNhap.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToComboBoxNamXuat() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        model.removeAllElements();

        try {
            List<Object[]> list = tkDAO.getListNamXuat();

            for (Object[] nam : list) {
                model.addElement((Integer) nam[0]);
            }
            cboNamXuat.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToComboBoxThangXuat() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        model.removeAllElements();
        if(cboNamXuat.getItemCount() == 0) return;
        int nam = (Integer) cboNamXuat.getSelectedItem();

        try {
            List<Object[]> list = tkDAO.getListThangXuat(nam);
            model.addElement(new String("Cả năm"));

            for (Object[] thang : list) {
                model.addElement((Integer) thang[0]);
            }
            cboThangXuat.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToComboBoxNamTQ() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        model.removeAllElements();

        try {
            List<Object[]> list = tkDAO.getListNamNhapXuat();

            for (Object[] nam : list) {
                model.addElement((Integer) nam[0]);
            }
            cboNamTQ.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToComboBoxNamTongHop() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        model.removeAllElements();

        try {
            List<Object[]> list = tkDAO.getListNamTongHop();

            for (Object[] nam : list) {
                model.addElement((Integer) nam[0]);
            }
            cboNamTH.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToComboBoxThangTongHop() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        model.removeAllElements();
        if(cboNamTH.getItemCount() == 0) return;
        int nam = (Integer) cboNamTH.getSelectedItem();

        try {
            List<Object[]> list = tkDAO.getListThangTongHop(nam);
            model.addElement(new String("Cả năm"));

            for (Object[] thang : list) {
                model.addElement((Integer) thang[0]);
            }
            cboThangTH.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu vào combo box tìm kiếm
    private void fillToComboBoxTimKiem() {
        DefaultComboBoxModel modelLT = new DefaultComboBoxModel();
        DefaultComboBoxModel modelNhap = new DefaultComboBoxModel();
        DefaultComboBoxModel modelXuat = new DefaultComboBoxModel();
        DefaultComboBoxModel modelTH = new DefaultComboBoxModel();

        modelLT.removeAllElements();
        modelNhap.removeAllElements();
        modelXuat.removeAllElements();
        modelTH.removeAllElements();

        //int nam = (Integer) cboNamNhap.getSelectedItem();

        for (int i = 1; i < tblLuuTru.getColumnCount(); i++) {
            modelLT.addElement(tblLuuTru.getColumnName(i));
        }

        for (int i = 1; i < tblTKnhap.getColumnCount(); i++) {
            modelNhap.addElement(tblTKnhap.getColumnName(i));
        }

        for (int i = 1; i < tblTKxuat.getColumnCount(); i++) {
            modelXuat.addElement(tblTKxuat.getColumnName(i));
        }

        for (int i = 1; i < tblTongHop.getColumnCount(); i++) {
            modelTH.addElement(tblTongHop.getColumnName(i));
        }

        cboTimKiemLT.setModel(modelLT);
        cboTimKiemNhap.setModel(modelNhap);
        cboTimKiemXuat.setModel(modelXuat);
        cboTimKiemTH.setModel(modelTH);
    }

    // Đỗ dữ liệu vào bảng danh sách lưu trữ
    private void fillToTableLuuTru() {

        tblLuuTruModel.setRowCount(0);

        String keyword = txtTimKiemLT.getText();
        int index = cboTimKiemLT.getSelectedIndex();

        String maKho;
        int indexKho = cboKhoLT.getSelectedIndex();
        String maLHH;
        int indexLHH = cboLoaiHangHoaLT.getSelectedIndex();

        if (indexKho > 0) {
            maKho = ((Kho) cboKhoLT.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaLT.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        try {
            List<Object[]> list = tkDAO.getListLuuTru(maKho, maLHH, keyword, index);
            int i = 1;
            double sumMoney = 0;
            double sumSoLuong = 0;
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1]
                };
                sumMoney += (Double) rs[1] * (Double) rs[2];
                sumSoLuong += (Double) rs[1];
                tblLuuTruModel.addRow(row);
            }
            lblSumTongGiaTri.setText(XNumber.toString(sumMoney, numFormat));
            lblSoLuongTKLT.setText(XNumber.toString(sumSoLuong, numFormat));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đỗ dữ liệu vào bảng danh sách hàng nhập
    private void fillToTableNhap() {
        tblNhapModel.setRowCount(0);

        String keyword = txtTimKiemNhap.getText().trim();
        int index = cboTimKiemNhap.getSelectedIndex();

        String maKho;
        int indexKho = cboKhoNhap.getSelectedIndex();
        String maLHH;
        int indexLHH = cboLoaiHangHoaNhap.getSelectedIndex();
        String nam;
        String thang;
        int indexThang = cboThangNhap.getSelectedIndex();

        if (indexKho > 0) {
            maKho = ((Kho) cboKhoNhap.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaNhap.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        nam = String.valueOf((Integer) cboNamNhap.getSelectedItem());

        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangNhap.getSelectedItem());
        } else {
            thang = "";
        }

        try {
            List<Object[]> list = tkDAO.getListNhap(maKho, maLHH, thang, nam, keyword, index);
            int i = 1;
            double sumMoney = 0;
            double sumSoLuong = 0;
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],
                    rs[2],
                    rs[3],
                    rs[4]
                };
                sumMoney += (Double) rs[4];
                sumSoLuong += (Double) rs[1];
                tblNhapModel.addRow(row);
            }
            lblTongSoGTN.setText(XNumber.toString(sumMoney, numFormat));
            lblTongSoLN.setText(XNumber.toString(sumSoLuong, numFormat));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đỗ dữ liệu vào bảng danh sách hàng xuất
    private void fillToTableXuat() {
        tblXuatModel.setRowCount(0);

        String keyword = txtTimKiemXuat.getText().trim();
        int index = cboTimKiemXuat.getSelectedIndex();

        String maKho;
        int indexKho = cboKhoXuat.getSelectedIndex();
        String maLHH;
        int indexLHH = cboLoaiHangHoaXuat.getSelectedIndex();
        String nam;
        String thang;
        int indexThang = cboThangXuat.getSelectedIndex();

        if (indexKho > 0) {
            maKho = ((Kho) cboKhoXuat.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaXuat.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        nam = String.valueOf((Integer) cboNamXuat.getSelectedItem());

        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangXuat.getSelectedItem());
        } else {
            thang = "";
        }

        try {
            List<Object[]> list = tkDAO.getListXuat(maKho, maLHH, thang, nam, keyword, index);
            int i = 1;
            double sumMoney = 0;
            double sumSoLuong = 0;
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],
                    rs[2],
                    rs[3],
                    rs[4]
                };
                sumMoney += (Double) rs[4];
                sumSoLuong += (Double) rs[1];
                tblXuatModel.addRow(row);
            }
            lblTongSoGTX.setText(XNumber.toString(sumMoney, numFormat));
            lblTongSoLX.setText(XNumber.toString(sumSoLuong, numFormat));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đỗ dữ liệu vào bảng danh sách hàng xuất
    private void fillToTableTongHop() {
        tblTongHopModel.setRowCount(0);

        String keyword = txtTimKiemTH.getText();
        int index = cboTimKiemTH.getSelectedIndex();

        String maKho;
        int indexKho = cboKhoTH.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoTH.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String maLHH;
        int indexLHH = cboLoaiHangHoaTH.getSelectedIndex();
        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaTH.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        String thang;
        int indexThang = cboThangTH.getSelectedIndex();
        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangTH.getSelectedItem());
        } else {
            thang = "";
        }

        String nam = String.valueOf(cboNamTH.getSelectedItem());

        Double sumXuatNhap = 0.0;
        Double sumXuat = 0.0;
        Double sumNhap = 0.0;

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTongHop(maKho, maLHH, thang, nam, keyword, index);

            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],
                    rs[2]
                };
                sumXuatNhap += (Double) rs[2];
                sumXuat += (Double) rs[4];
                sumNhap += (Double) rs[5];
                tblTongHopModel.addRow(row);
            }
            lblTongSoGTXTH.setText(XNumber.toString(sumXuat, numFormat));
            lblTongSoGTNTH.setText(XNumber.toString(sumNhap, numFormat));
            lblTongSoGTXN.setText(XNumber.toString(sumXuatNhap, numFormat));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // đổ dữ liệu bảng top 10 
    // đổ dữ liệu top 10 loại hàng hóa theo từng bảng thống kê
    private void fillToTableTop10LHHLT() {
        tblTopLHHModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoLT.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoLT.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10LTLHH(maKho);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1]};
                tblTopLHHModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToTableTop10LHHnhap() {
        tblTopLHHNhapModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoNhap.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoNhap.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String thang;
        int indexThang = cboThangNhap.getSelectedIndex();
        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangNhap.getSelectedItem());
        } else {
            thang = "";
        }

        String nam = String.valueOf(cboNamNhap.getSelectedItem());

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10NLHH(maKho, thang, nam);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1]};
                tblTopLHHNhapModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToTableTop10LHHxuat() {
        tblTopLHHXuatModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoXuat.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoXuat.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String thang;
        int indexThang = cboThangXuat.getSelectedIndex();
        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangXuat.getSelectedItem());
        } else {
            thang = "";
        }

        String nam = String.valueOf(cboNamXuat.getSelectedItem());

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10XLHH(maKho, thang, nam);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1]};
                tblTopLHHXuatModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // đổ dữ liệu top 10 hàng hóa theo từng bảng thống kê
    private void fillToTableTop10HHLT() {
        tblTopHHModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoLT.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoLT.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String maLHH;
        int indexLHH = cboLoaiHangHoaLT.getSelectedIndex();
        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaLT.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10LTHH(maKho, maLHH);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1]};
                tblTopHHModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToTableTop10HHnhap() {
        tblTopHHNhapModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoNhap.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoNhap.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String maLHH;
        int indexLHH = cboLoaiHangHoaNhap.getSelectedIndex();
        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaNhap.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        String thang;
        int indexThang = cboThangNhap.getSelectedIndex();
        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangNhap.getSelectedItem());
        } else {
            thang = "";
        }

        String nam = String.valueOf(cboNamXuat.getSelectedItem());

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10NHH(maKho, maLHH, thang, nam);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1]};
                tblTopHHNhapModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToTableTop10HHxuat() {
        tblTopHHXuatModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoXuat.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoXuat.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String maLHH;
        int indexLHH = cboLoaiHangHoaXuat.getSelectedIndex();
        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaXuat.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        String thang;
        int indexThang = cboThangXuat.getSelectedIndex();
        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangXuat.getSelectedItem());
        } else {
            thang = "";
        }

        String nam = String.valueOf(cboNamXuat.getSelectedItem());

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10XHH(maKho, maLHH, thang, nam);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],};
                tblTopHHXuatModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToTableTop10LHHTH() {
        tblTopLHHTHModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoTH.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoTH.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String thang;
        int indexThang = cboThangTH.getSelectedIndex();
        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangTH.getSelectedItem());
        } else {
            thang = "";
        }

        String nam = String.valueOf(cboNamTH.getSelectedItem());

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10THLHH(maKho, thang, nam);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],
                    rs[2]};
                tblTopLHHTHModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToTableTop10HHTH() {
        tblTopHHTHModel.setRowCount(0);

        String maKho;
        int indexKho = cboKhoTH.getSelectedIndex();
        if (indexKho > 0) {
            maKho = ((Kho) cboKhoTH.getSelectedItem()).toString();
        } else {
            maKho = "";
        }

        String maLHH;
        int indexLHH = cboLoaiHangHoaTH.getSelectedIndex();
        if (indexLHH > 0) {
            maLHH = String.valueOf(((LoaiHangHoa) cboLoaiHangHoaTH.getSelectedItem()).getMaLHH());
        } else {
            maLHH = "";
        }

        String thang;
        int indexThang = cboThangTH.getSelectedIndex();
        if (indexThang > 0) {
            thang = String.valueOf((Integer) cboThangTH.getSelectedItem());
        } else {
            thang = "";
        }

        String nam = String.valueOf(cboNamXuat.getSelectedItem());

        try {
            int i = 1;
            List<Object[]> list = tkDAO.getListTop10THHH(maKho, maLHH, thang, nam);
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],
                    rs[2]};
                tblTopHHTHModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đỗ lại dữ liệu 
    public void refreshForm() {
        tblLuuTru.setRowSorter(null);
        tblTKnhap.setRowSorter(null);
        tblTKxuat.setRowSorter(null);
        tblTongHop.setRowSorter(null);

        this.fillToComboBoxTimKiem();
        this.fillToComboBoxKho();
        this.fillToComboBoxLoaiHangHoa();
        this.fillToComboBoxNamTQ();
        this.fillToComboBoxNamNhap();
        this.fillToComboBoxThangNhap();
        this.fillToComboBoxNamXuat();
        this.fillToComboBoxThangXuat();
        this.fillToComboBoxNamTongHop();
        this.fillToComboBoxThangTongHop();

        this.fillToChartTongQuan();
        this.fillToTableLuuTru();
        this.fillToTableNhap();
        this.fillToTableXuat();
        this.fillToTableTongHop();

        this.fillToTableTop10LHHLT();
        this.fillToTableTop10LHHnhap();
        this.fillToTableTop10LHHxuat();
        this.fillToTableTop10LHHTH();
        this.fillToTableTop10HHLT();
        this.fillToTableTop10HHnhap();
        this.fillToTableTop10HHxuat();
        this.fillToTableTop10HHTH();

        // Kiểm tra dữ liệu bảng, chỉ bật bộ sắp xếp khi bảng có dữ liệu
        tblLuuTru.setAutoCreateRowSorter(tblLuuTru.getRowCount() > 0);
        tblTKnhap.setAutoCreateRowSorter(tblTKnhap.getRowCount() > 0);
        tblTKxuat.setAutoCreateRowSorter(tblTKxuat.getRowCount() > 0);
        tblTongHop.setAutoCreateRowSorter(tblTongHop.getRowCount() > 0);

        this.timer.restart();
    }

    // sau hai phút tải lại dữ liệu
    private Timer timer = new Timer(120000, (e) -> {
        refreshForm();
    });

}
